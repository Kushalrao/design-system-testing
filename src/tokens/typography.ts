/**
 * Typography Design Tokens
 * Auto-generated from Figma Variables
 * DO NOT EDIT MANUALLY - This file is generated by scripts/generate-tokens.js
 */

export const typography = {
  "fontSize": {
    "font-size-xs": {
      "128:0": 12,
      "128:4": 0
    },
    "font-size-cap-caption": {
      "128:0": 12,
      "128:4": 0
    },
    "font-size-xl": {
      "128:0": 18,
      "128:4": 0
    },
    "font-size-m": {
      "128:0": 21,
      "128:4": 0
    }
  },
  "fontWeight": {
    "weight-bold": {
      "128:0": "Bold",
      "128:4": "String value"
    },
    "weight-semi-bold": {
      "128:0": "Semi-bold",
      "128:4": "String value"
    }
  },
  "lineHeight": {
    "large-line-height": {
      "128:0": 25,
      "128:4": 0
    },
    "average-line-height": {
      "128:0": 15,
      "128:4": 0
    }
  }
} as const;

export type TypographyToken = keyof typeof typography;

/**
 * Helper to get typography value for a specific mode
 */
export function getTypographyValue(
  category: 'fontSize' | 'fontWeight' | 'lineHeight',
  token: string,
  modeId?: string
): number | string {
  const value = (typography as any)[category][token];
  if (!value) return 0;
  
  if (typeof value === 'object' && modeId) {
    return (value[modeId] || Object.values(value)[0]) as number | string;
  }
  if (typeof value === 'object') {
    return Object.values(value)[0] as number | string;
  }
  return value as number | string;
}
